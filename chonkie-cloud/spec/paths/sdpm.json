{
    "post": {
        "summary": "SDPM Chunker",
        "description": "Extends semantic chunking using a double-pass merging approach (Semantic Double-Pass Merging). Connects related content even if not consecutive.",
        "operationId": "get_sdpm_chunks_v1_chunk_sdpm_post",
        "requestBody": {
            "required": true,
            "content": {
                "multipart/form-data": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "file": {
                                "type": "string",
                                "format": "binary",
                                "description": "The file to chunk."
                            },
                            "embedding_model": {
                                "type": "string",
                                "title": "Embedding Model",
                                "default": "minishlab/potion-base-8M",
                                "description": "Model identifier or embedding model instance to use for semantic analysis."
                            },
                            "threshold": {
                                "anyOf": [
                                    { "type": "string", "const": "auto" },
                                    { "type": "number" },
                                    { "type": "integer" }
                                ],
                                "title": "Threshold",
                                "default": "auto",
                                "description": "Similarity threshold for grouping sentences. Can be a float [0,1] for direct threshold, int (1,100] for percentile, or 'auto' for automatic calculation."
                            },
                            "mode": {
                                "type": "string",
                                "title": "Mode",
                                "default": "window",
                                "description": "Mode for grouping sentences, either 'cumulative' or 'window'."
                            },
                            "chunk_size": {
                                "type": "integer",
                                "title": "Chunk Size",
                                "default": 512,
                                "description": "Maximum tokens per chunk."
                            },
                            "similarity_window": {
                                "type": "integer",
                                "title": "Similarity Window",
                                "default": 1,
                                "description": "Number of preceding sentences to consider for similarity comparison."
                            },
                            "min_sentences": {
                                "type": "integer",
                                "title": "Min Sentences",
                                "default": 1,
                                "description": "Minimum number of sentences per chunk."
                            },
                            "min_characters_per_sentence": {
                                "type": "integer",
                                "title": "Min Characters Per Sentence",
                                "default": 12,
                                "description": "Minimum number of characters per sentence."
                            },
                            "threshold_step": {
                                "type": "number",
                                "title": "Threshold Step",
                                "default": 0.01,
                                "description": "Step size used when automatically calculating the similarity threshold."
                            },
                            "delim": {
                                "anyOf": [
                                    { "type": "string" },
                                    { "items": { "type": "string" }, "type": "array" }
                                ],
                                "title": "Delim",
                                "default": [ ".", "!", "?", "\n" ],
                                "description": "Delimiters to split sentences on."
                            },
                            "skip_window": {
                                "type": "integer",
                                "title": "Skip Window",
                                "default": 1,
                                "description": "Number of chunks to skip when looking for similarities in the second pass."
                            },
                            "return_type": {
                                "type": "string",
                                "title": "Return Type",
                                "default": "chunks",
                                "enum": [ "texts", "chunks" ],
                                "description": "Return type for the chunking process. If 'chunks', returns a list of `SemanticChunk` objects. If 'texts', returns a list of strings."
                            }
                        }
                    }
                }
            }
        },
        "responses": {
            "200": {
                "description": "Successful Response: A list of `SemanticChunk` objects.",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "SDPMChunkResponse",
                            "type": "array",
                            "items": {
                                "$ref": "../schemas.json#/schemas/SemanticChunkSchema"
                            },
                            "description": "A list containing `SemanticChunk` objects (as SDPM uses semantic chunking), detailing segments and sentences with optional embeddings."
                        }
                    }
                }
            }
        }
    }
}
